#
#
#
# function can only return number.
#

TEXTDOMAIN=initscripts

# Make sure umask is sane
umask 022

# Set up a default search path.
PATH="/sbin:/usr/sbin:/bin:/usr/bin"
export PATH


image_exist () {
  local s
  s=$(docker images |grep $1)
  if [ -z "${s}" ] ; then
    echo "no"
  else
    echo "yes"
  fi
}

container_exist () {
  local cn=$1
  if [ -z "$cn" ]; then
    echo "no"
    exit 0
  fi

  if [ -z "$(docker ps -a|grep [^/]${cn})" ] ; then
    echo "no"
  else
    echo "yes"
  fi
}

container_running () {
  local cn=$1
  if [ -z "$cn" ]; then
    echo "no"
    exit 0
  fi
  if [ -z "$(docker ps |grep [^/]${cn})" ] ; then
    echo "no"
  else
    echo "yes"
  fi
}

#CentOS Linux release 7.0.1406 (Core)

os_version () {
  echo $(cat /etc/redhat-release|sed 's/^[^0-9]*//'|sed 's/^\([0-9]\).*$/\1/')
}

privilegedstr () {
  local v=$(os_version)
  if [ $v = "7" ] ;then
    echo "--privileged=true"
  else
    echo ""
  fi
}

find_common () {
  local compath="../commons"
  local fn
  if [ ! -d $compath ]; then
    compath="../../commons"
  fi

  if [ ! -d $compath ]; then
    echo ""
  else
    fn="$compath/tocontainer/$1"
    if [ -f $fn ]; then
      echo $fn
    else
      fn="$compath/tohostdir/$1"
      if [ -f $fn]; then
        echo $fn
      fi
    fi
  fi
}

copy_commons () {
  local fn
  for f in "$@" ; do
    if [ ! -e $f ] ;then
      fn=$(find_common $f)
      if [ ! -z $fn]; then
        copy $fn ./
      fi
    fi
  done
}

copy_tocontainer () {
  copy_commons "runsshd.sh" "set_root_pw.sh"
}
#@params: appname, servicename
sn_logn_cn () {
  local px=""
  if [ -z "$1" ]; then
    px="${2}-"
  else
    px="${1}-${2}-"
  fi

  local service_cn="${px}service"
  local log_cn="${px}log-vol"
  local c_cn="${px}config-vol"
  local suplog_cn="${px}-supervisor-log-vol"
  echo "${service_cn} ${log_cn} ${c_cn} ${suplog_cn}"
}
